@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<ul class="navbar-nav">
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <li class="nav-item">
        <a class="nav-link text-dark" style="color: white" asp-area="" asp-controller="PurchaseGoods" asp-action="Index">Purchase Goods</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" style="color: white" asp-area="" asp-controller="AllocateFunds" asp-action="Index">Allocate Funds</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" style="color: white" asp-area="" asp-controller="AllocateGoods" asp-action="Index">Allocate Goods</a>
    </li>
}
</ul>

<ul class="navbar-nav">

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}

</ul>
